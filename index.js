
web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
abi = JSON.parse('[{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getAgeRange","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getDate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getBloodType","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getHistory","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"},{"name":"_bloodType","type":"string"},{"name":"_ageRange","type":"uint256"},{"name":"_uniqueID","type":"string"}],"name":"newDonation","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getOrigin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]');
BloodChainStorage = web3.eth.contract(abi);
// In your nodejs console, execute contractInstance.address to get the address at which the contract is deployed and change the line below to use your deployed address
contractInstance = BloodChainStorage.at('0xab9c46c123be77a8c48446a482c7f3694fbb7d93');
//candidates = {"Rama": "candidate-1", "Nick": "candidate-2", "Jose": "candidate-3"}
var ageRanges = ["16-19","20-25","26-30","31-35","36-40","41-45","46-50","51-55","56-60","61-65","66+"]
function ageRange() {
  bloodID = $("#bloodID").val();
  console.log(bloodID)
  console.log(contractInstance.getAgeRange(bloodID).toString());
  var ageRange = contractInstance.getAgeRange(bloodID).toString();
 
  
  $("#ageRange").html(ageRanges[ageRange-1]);
}

function amount() {
  bloodID = $("#bloodID").val();
  console.log(bloodID)
  console.log(contractInstance.getAmount(bloodID).toString());
  $("#amount").html(contractInstance.getAmount(bloodID).toString()+" mLs");
}

function test() {
  var bloodchainstorageContract = web3.eth.contract([{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getAgeRange","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getDate","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getBloodType","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getAmount","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getHistory","outputs":[{"name":"","type":"address[]"},{"name":"","type":"uint256[]"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_amount","type":"uint256"},{"name":"_bloodType","type":"string"},{"name":"_ageRange","type":"uint256"},{"name":"_uniqueID","type":"string"}],"name":"newDonation","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_uniqueID","type":"string"}],"name":"getOrigin","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]);
  var bloodchainstorage = bloodchainstorageContract.new(
     {
       from: web3.eth.accounts[0], 
       data: '0x6060604052341561000f57600080fd5b610feb8061001e6000396000f300606060405260043610610083576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806351001c5714610088578063616269d8146100f9578063ba605c491461016a578063e35cf0ca14610240578063e360736e146102b1578063f63fbc6a146103ab578063f8d9673f1461045d575b600080fd5b341561009357600080fd5b6100e3600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506104fa565b6040518082815260200191505060405180910390f35b341561010457600080fd5b610154600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610571565b6040518082815260200191505060405180910390f35b341561017557600080fd5b6101c5600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506105e8565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102055780820151818401526020810190506101ea565b50505050905090810190601f1680156102325780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561024b57600080fd5b61029b600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506106fe565b6040518082815260200191505060405180910390f35b34156102bc57600080fd5b61030c600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610775565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015610353578082015181840152602081019050610338565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561039557808201518184015260208101905061037a565b5050505090500194505050505060405180910390f35b34156103b657600080fd5b61045b600480803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610a68565b005b341561046857600080fd5b6104b8600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610e47565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080826040518082805190602001908083835b602083101515610533578051825260208201915060208101905060208303925061050e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600301549050919050565b600080826040518082805190602001908083835b6020831015156105aa5780518252602082019150602081019050602083039250610585565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600401549050919050565b6105f0610ede565b6000826040518082805190602001908083835b6020831015156106285780518252602082019150602081019050602083039250610603565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106f25780601f106106c7576101008083540402835291602001916106f2565b820191906000526020600020905b8154815290600101906020018083116106d557829003601f168201915b50505050509050919050565b600080826040518082805190602001908083835b6020831015156107375780518252602082019150602081019050602083039250610712565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600101549050919050565b61077d610ef2565b610785610f06565b600061078f610ef2565b610797610f06565b600080876040518082805190602001908083835b6020831015156107d057805182526020820191506020810190506020830392506107ab565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600501549350836040518059106108175750595b90808252806020026020018201604052509250836040518059106108385750595b90808252806020026020018201604052509150600090505b6000876040518082805190602001908083835b6020831015156108885780518252602082019150602081019050602083039250610863565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060050154811015610a59576000876040518082805190602001908083835b6020831015156108fe57805182526020820191506020810190506020830392506108d9565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600601600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16838281518110151561097457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000876040518082805190602001908083835b6020831015156109e857805182526020820191506020810190506020830392506109c3565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206007016000828152602001908152602001600020548282815181101515610a3e57fe5b90602001906020020181815250508080600101915050610850565b82829550955050505050915091565b60c0604051908101604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200142815260200160008152506000826040518082805190602001908083835b602083101515610ae55780518252602082019150602081019050602083039250610ac0565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019080519060200190610b85929190610f1a565b50606082015181600301556080820151816004015560a08201518160050155905050336000826040518082805190602001908083835b602083101515610be05780518252602082019150602081019050602083039250610bbb565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600601600080846040518082805190602001908083835b602083101515610c4f5780518252602082019150602081019050602083039250610c2a565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060050154815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426000826040518082805190602001908083835b602083101515610d0b5780518252602082019150602081019050602083039250610ce6565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600701600080846040518082805190602001908083835b602083101515610d7a5780518252602082019150602081019050602083039250610d55565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020600501548152602001908152602001600020819055506000816040518082805190602001908083835b602083101515610dfb5780518252602082019150602081019050602083039250610dd6565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206005016000815480929190600101919050555050505050565b600080826040518082805190602001908083835b602083101515610e805780518252602082019150602081019050602083039250610e5b565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b602060405190810160405280600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610f5b57805160ff1916838001178555610f89565b82800160010185558215610f89579182015b82811115610f88578251825591602001919060010190610f6d565b5b509050610f969190610f9a565b5090565b610fbc91905b80821115610fb8576000816000905550600101610fa0565b5090565b905600a165627a7a72305820679759557ebb800eb862f8c3598aa913c7792b1ad77ceb9a42dbe9913da07dc00029', 
       gas: '4700000'
     }, function (e, contract){
      console.log(e, contract);
      if (typeof contract.address !== 'undefined') {
           console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);
      }
   })

}

function creatorAddress() {
  bloodID = $("#bloodID").val();
  console.log(bloodID)
  console.log(contractInstance.getOrigin(bloodID).toString());
  $("#creatorAddress").html(contractInstance.getOrigin(bloodID).toString());

}

function loadBloodID() {
  bloodID = $("#bloodID").val();
  $("#bloodIDBox").html(bloodID)
}

function creationDate() {
  bloodID = $("#bloodID").val();
  console.log(bloodID)
  console.log(contractInstance.getDate(bloodID).toString());
  var unixDate = contractInstance.getDate(bloodID).toString();
  $("#creationDate").html(new Date(parseInt(unixDate)*1000));

}

function bloodType() {
  bloodID = $("#bloodID").val();
  console.log(bloodID)
  var bloodType = contractInstance.getBloodType(bloodID).call().then(function(result){
    console.log(result)
  });
  $("#bloodType").html(bloodType);
}


function loadData() {
  ageRange()
  amount()
  creatorAddress()
  loadBloodID()
  //creationDate()
  bloodType()
}


function create() {
  var amount = $("#amount").val();
  var bloodType = $("#bloodType").val();
  var ageRange = $("#ageRange").val();
  var address = $("#address").val();
  var uniqueID = Math.random().toString(36).substring(2);
  var _ageRange = ageRanges.indexOf(ageRange) + 1
  var tx = {from: web3.eth.accounts[0]}
  console.log(amount + " " + bloodType + " " + _ageRange + " " + address + " " + uniqueID)
  web3.
  contractInstance.newDonation(amount,bloodType,_ageRange, uniqueID, {from: web3.eth.accounts[0]});
  
}